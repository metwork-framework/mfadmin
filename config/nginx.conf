# General Configuration
daemon off;
worker_processes {{MFADMIN_NGINX_WORKERS}};
{% if MFADMIN_LOG_MINIMAL_LEVEL == "DEBUG" %}
error_log  {{MODULE_RUNTIME_HOME}}/log/nginx_error.log debug;
{% else %}
error_log  {{MODULE_RUNTIME_HOME}}/log/nginx_error.log error;
{% endif %}
pid        {{MODULE_RUNTIME_HOME}}/var/nginx.pid;

# Main Loop Configuration
events {
    worker_connections  10000;
}

# HTTP Configuration
http {

    include       mime.types;
    default_type  text/plain;
    # FIXME: ugly hack with ~~~1 and ~~~~2 to circumvent nginxfmt problem with JSON
    log_format main '~~~1 "@timestamp": "$time_iso8601", "from": "$remote_addr", "method": "$request_method", "uri": "$request_uri", "duration": $request_time, "status": $status, "request_length": $request_length, "reply_length": $bytes_sent ~~~2';
    access_log  {{MODULE_RUNTIME_HOME}}/log/nginx_access.log  main;
    client_body_temp_path {{MFADMIN_NGINX_CLIENTBODY_TEMP_PATH}};
    client_max_body_size {{MFADMIN_NGINX_UPLOAD_MAX_BODY_SIZE}}m;
    server_names_hash_bucket_size 1024;
    server_names_hash_max_size 1024;

    proxy_http_version 1.1;
    proxy_buffering off;
    proxy_set_header Host $http_host;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $proxy_connection;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $proxy_x_forwarded_proto;
    proxy_set_header X-Forwarded-Path $request_uri;
    proxy_read_timeout {{MFADMIN_NGINX_TIMEOUT}}s;
    proxy_send_timeout {{MFADMIN_NGINX_TIMEOUT}}s;
    proxy_connect_timeout  {{MFADMIN_NGINX_TIMEOUT}}s;

    # If we receive X-Forwarded-Proto, pass it through; otherwise, pass along the
    # # scheme used to connect to this server
    map $http_x_forwarded_proto $proxy_x_forwarded_proto {
        default $http_x_forwarded_proto;
        ''      $scheme;
    }

    # If we receive Upgrade, set Connection to "upgrade"; otherwise, delete any
    # # Connection header that may have been passed to this server
    map $http_upgrade $proxy_connection {
        default upgrade;
        ''      close;
    }

    server {

        listen {{MFADMIN_NGINX_PORT}} backlog=40000 default_server;
        server_name 127.0.0.1;

        location = /status {
            allow 127.0.0.1/32;
            deny all;
            stub_status on;
            access_log off;
        }

        location = /uuid {
            allow 127.0.0.1/32;
            deny all;
            echo "{{UUID}}";
            access_log off;
        }

        location /grafana/ {
            proxy_pass http://127.0.0.1:{{MFADMIN_GRAFANA_PORT}}/;
        }

        location /kibana/ {
            proxy_pass http://127.0.0.1:{{MFADMIN_KIBANA_HTTP_PORT}}/;
            auth_basic "Restricted";
            auth_basic_user_file {{MODULE_RUNTIME_HOME}}/tmp/kibana.passwd;
        }

        location / {
        root {{MODULE_RUNTIME_HOME}}/share/www/;
        index index.html;
    }


    }
}
