#!/usr/bin/env python3

import argparse
import sys
import requests
from requests.auth import HTTPBasicAuth
import os
import requests_unixsocket
from mfutil.cli import MFProgress

MFMODULE_RUNTIME_HOME = os.environ['MFMODULE_RUNTIME_HOME']
DESCRIPTION = "test if grafana is up (return code: 0)"
GRAFANA_SOCKET = "%s/tmp/grafana.sock" % MFMODULE_RUNTIME_HOME
GRAFANA_URL = "http+unix://%s/api/admin/stats" % \
    GRAFANA_SOCKET.replace('/', '%2F')
ADMIN_PASSWORD = os.environ['MFADMIN_GRAFANA_ADMIN_PASSWORD']
TIMEOUT = 60

parser = argparse.ArgumentParser(description=DESCRIPTION)
parser.parse_args()

requests_unixsocket.monkeypatch()

with MFProgress() as progress:
    t = progress.add_task("- Testing Grafana...", total=TIMEOUT)
    try:
        r = requests.get(GRAFANA_URL, auth=HTTPBasicAuth('admin',
                                                         ADMIN_PASSWORD),
                         timeout=TIMEOUT)
    except Exception:
        pass
    if r.status_code == 200:
        progress.complete_task(t)
        sys.exit(0)
    if r.status_code == 401:
        # maybe the password is not updated
        os.system("_force_grafana_admin_password.sh >/dev/null")
    progress.complete_task_nok(t)
    sys.exit(1)
