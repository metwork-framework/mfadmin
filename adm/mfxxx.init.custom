{% extends "mfxxx.init" %}
{% block custom %}

echo -n "- (pre)Starting mfadmin services..."
echo_running
mfadmin.start NOINIT >"${MFMODULE_RUNTIME_HOME}/tmp/mfadmin_start.$$" 2>&1
mfadmin.status >/dev/null 2>&1
if test $? -eq 0; then
    echo_ok
    rm -f "${MFMODULE_RUNTIME_HOME}/tmp/mfadmin_start.$$"
else
    echo_nok
    echo_bold "=============== DEBUG OUTPUT =================================="
    cat "${MFMODULE_RUNTIME_HOME}/tmp/mfadmin_start.$$"
    rm -f "${MFMODULE_RUNTIME_HOME}/tmp/mfadmin_start.$$"
    for F in $(ls ${MFMODULE_RUNTIME_HOME}/log/*.log ${MFMODULE_RUNTIME_HOME}/log/*.stdout ${MFMODULE_RUNTIME_HOME}/log/*.stderr 2>/dev/null); do
        if test -s "${F}"; then
            echo "===== 40 last lines of ${F} to debug ====="
            tail -40 "${F}"
            echo ""
            echo ""
        fi
    done
    echo_bold "==============================================================="
    exit 1
fi

if test "${MFADMIN_LAYER_METRICS_LOADED:-}" = "1"; then
    echo -n "- Creating influxdb database..."
    echo_running
    influx -port ${MFADMIN_INFLUXDB_HTTP_PORT} -precision rfc3339 -execute 'CREATE DATABASE metrics WITH DURATION 24h REPLICATION 1 NAME fullres'
    influx -port ${MFADMIN_INFLUXDB_HTTP_PORT} -precision rfc3339 -execute 'CREATE RETENTION POLICY medres ON metrics DURATION 7d REPLICATION 1'
    influx -port ${MFADMIN_INFLUXDB_HTTP_PORT} -precision rfc3339 -execute 'CREATE RETENTION POLICY lowres ON metrics DURATION 52w REPLICATION 1'
    echo_ok

    echo -n "- Provisioning home dashboard..."
    echo_running
    _provision_home_dashboard.py >/dev/null 2>&1
    if test $? -eq 0; then
        echo_ok
    else
        echo_nok
    fi
fi
if test "${MFADMIN_LAYER_LOGS_LOADED:-}" = "1"; then
    echo -n "- Provisionning nginx ES template..."
    echo_running
    _provision_nginx_template.py >/dev/null 2>&1
    _provision_mflog_template.py >/dev/null 2>&1
    if test $? -eq 0; then
        echo_ok
    else
        echo_nok
    fi
    echo -n "- Provisionning kibana dashboards..."
    echo_running
    _provision_kibana_dashboards >/dev/null 2>&1
    if test $? -eq 0; then
        echo_ok
    else
        echo_nok
        echo_bold "ERROR: see _provision_kibana_dashboards output for details"
    fi
fi

echo -n "- Stopping mfadmin services..."
echo_running
mfadmin.stop >/dev/null 2>&1
echo_ok

{% endblock %}
